{
	"info": {
		"_postman_id": "16e3c189-d061-4aed-8beb-e8088298b791",
		"name": "James User API - PUBLIC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "_healtcheck",
			"item": [
				{
					"name": "James healthcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "32ae811f-b10f-40e1-a5cb-909c6b2e2204",
								"exec": [
									"pm.test(\"Status code\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Nothing unhealthy\", function () ",
									"{",
									"    pm.expect(pm.response.text()).to.not.include(\"unhealthy\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/healthcheck",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"healthcheck"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Domain API",
			"item": [
				{
					"name": "Domain - create domain1 (we call it main domain later)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0d37cf47-00b9-46f8-9dfe-0273cda4220c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e79dd26-1763-4451-abe0-91a5739af88d",
								"exec": [
									"tests[\"Expected status code\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - create domain2 (we'll call it alias domain later)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e097b430-d97f-4223-b490-168d8e435fbc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "825e9900-defe-4665-a44d-4e2972c48953",
								"exec": [
									"tests[\"Expected status code\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/alias.{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"alias.{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - Check if domain1 has been created",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7c04666c-c065-426d-be0e-ac9b5509b90b",
								"exec": [
									"if (responseCode.code === 204)",
									"{",
									"    console.log(\"Domain '\" + postman.getEnvironmentVariable(\"domain\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"Domain '\" + postman.getEnvironmentVariable(\"domain\") + \"' DOES NOT exist\");",
									"}",
									"",
									"pm.test(\"Status code\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - Check if domain2 has been created",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "329fe3ff-5c94-44fb-a9f2-26b631894dc3",
								"exec": [
									"if (responseCode.code === 204)",
									"{",
									"    console.log(\"Domain 'alias.\" + postman.getEnvironmentVariable(\"domain\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"Domain 'alias.\" + postman.getEnvironmentVariable(\"domain\") + \"' DOES NOT exist\");",
									"}",
									"",
									"pm.test(\"Status code\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/alias.{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"alias.{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - get list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "face5061-5bfe-48ea-ad9f-cf62e0dfa6a4",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - set domain2 as alias to domain1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c350cf48-388e-4c5f-a786-341d8ad96696",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/{{domain}}/aliases/alias.{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"{{domain}}",
								"aliases",
								"alias.{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - set domain localhost as alias to domain1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b649de23-43e8-40a2-91c2-6cfa43e744ae",
								"exec": [
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/{{domain}}/aliases/localhost",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"{{domain}}",
								"aliases",
								"localhost"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - get aliases of domain1 (main domain)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "83908487-087c-404c-b143-4f5107e99755",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"source is set\"] = jsonData[0].source !== undefined;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/{{domain}}/aliases",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"{{domain}}",
								"aliases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Domain - delete domain",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "90e12325-0393-4e0d-9033-00ff306070aa",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "087e41b9-3218-4649-85ce-75f392959972",
								"exec": [
									"tests[\"Expected status code\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/domains/alias.james.local",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"domains",
								"alias.james.local"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User API",
			"item": [
				{
					"name": "Create user with username1 (or update password if exists)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7662b38f-a234-4084-a414-d3f88ab9ce05",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d44b0741-0d80-4145-ae34-678899cd9f7a",
								"exec": [
									"tests[\"Correct status code\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"password\":\"{{username1}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username1}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username1}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with username2 (or update password if exists)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0d46ba8e-f91f-4ddb-8515-a2be519cce6d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9234ef67-c435-4237-8297-6ff3718fab35",
								"exec": [
									"tests[\"Correct status code\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"password\":\"{{username2}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username2}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username2}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user with username3 (or update password if exists)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "833fdd65-c672-41c6-8937-59731ac629b4",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d4ad3d81-b380-4224-8142-873a9fd5565a",
								"exec": [
									"tests[\"Correct status code\"] = responseCode.code === 204;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"password\":\"{{username3}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username3}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username3}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if username1 exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67eb150b-433b-4460-9ca2-eec2e901a554",
								"exec": [
									"if (responseCode.code === 200)",
									"{",
									"    console.log(\"User '\" + postman.getEnvironmentVariable(\"username1\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 400) {",
									"",
									"     console.log(\"Username '\" + postman.getEnvironmentVariable(\"username1\") + \"' IS INVALID\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"User '\" + postman.getEnvironmentVariable(\"username1\") + \"' DOES NOT exist\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username1}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username1}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if username2 exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b6bea6c4-ac89-49cd-909d-63d84809d06b",
								"exec": [
									"if (responseCode.code === 200)",
									"{",
									"    console.log(\"User '\" + postman.getEnvironmentVariable(\"username2\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 400) {",
									"",
									"     console.log(\"Username '\" + postman.getEnvironmentVariable(\"username2\") + \"' IS INVALID\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"User '\" + postman.getEnvironmentVariable(\"username2\") + \"' DOES NOT exist\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username2}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username2}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check if username3 exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0915d04d-fd13-450b-bc4e-300870263eae",
								"exec": [
									"if (responseCode.code === 200)",
									"{",
									"    console.log(\"User '\" + postman.getEnvironmentVariable(\"username3\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 400) {",
									"",
									"     console.log(\"Username '\" + postman.getEnvironmentVariable(\"username3\") + \"' IS INVALID\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"User '\" + postman.getEnvironmentVariable(\"username3\") + \"' DOES NOT exist\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "HEAD",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username3}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username3}}%40{{domain}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users list",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2aad8caa-6645-4a49-803b-4fe2197c47cd",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/users",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "ge user1 allowed From Headers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "270f01d8-c4f3-4911-8934-48d35d422328",
								"exec": [
									"if (responseCode.code === 204)",
									"{",
									"    console.log(\"User '\" + postman.getEnvironmentVariable(\"username\") + \"' exists\");",
									"}",
									"else if (responseCode.code === 400) {",
									"",
									"     console.log(\"Username '\" + postman.getEnvironmentVariable(\"username\") + \"' IS INVALID\");",
									"}",
									"else if (responseCode.code === 404) {",
									"",
									"     console.log(\"User '\" + postman.getEnvironmentVariable(\"username\") + \"' DOES NOT exist\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username1}}%40{{domain}}/allowedFromHeaders",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username1}}%40{{domain}}",
								"allowedFromHeaders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "733c8ce0-c6c7-49fb-843d-7a6ed98b2781",
								"exec": [
									"if (responseCode.code === 204) {",
									"    console.log(\"User '\" + postman.getEnvironmentVariable(\"username1\") + \"' (if it existed) was successfully deleted\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "99ff55da-a6df-48ec-a5db-b9fcb7c47d2f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"password\":\"passwordToBeUsed\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{jamesApiUrl}}/users/{{username1}}%40{{domain}}",
							"host": [
								"{{jamesApiUrl}}"
							],
							"path": [
								"users",
								"{{username1}}%40{{domain}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "JMAP API",
			"item": [
				{
					"name": "Password authentication for JMAP",
					"item": [
						{
							"name": "Initiate authentication request for username1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7e8377c9-63be-423b-947f-638ac7a6a61b",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"username1.continuationToken\", jsonData.continuationToken);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=UTF-8",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"username\":\"{{username1}}@{{domain}}\",\"deviceName\":\"Postman\",\"clientName\":\"Postman Client\",\"clientVersion\":\"7.33.1\"}\r\n"
								},
								"url": {
									"raw": "{{jmapApiHost}}/authentication",
									"host": [
										"{{jmapApiHost}}"
									],
									"path": [
										"authentication"
									]
								}
							},
							"response": []
						},
						{
							"name": "Complete authentication for username1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ccbb447-7012-45c2-a2ef-9e41b87c2342",
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"pm.collectionVariables.set(\"accessToken\", jsonData.accessToken);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true,
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json; charset=UTF-8",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"token\":\"{{username1.continuationToken}}\",\"method\":\"password\",\"password\":\"{{username1}}\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{jmapApiHost}}/authentication",
									"host": [
										"{{jmapApiHost}}"
									],
									"path": [
										"authentication"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "jmap-draft (discouraged)",
					"item": [
						{
							"name": "Mailbox API",
							"item": [
								{
									"name": "Get mailboxes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0aa39d7a-4bea-4780-a36a-fddebd16c713",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"console.log(\"username1.mailboxId:\" + jsonData[0][1].list[0].id)",
													"",
													"pm.collectionVariables.set(\"username1.mailboxId\", jsonData[0][1].list[0].id);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json; charset=UTF-8",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[[\"getMailboxes\",{},\"#0\"]]"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MessageList API",
							"item": [
								{
									"name": "Request username1 message list for INBOX Mailbox",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9c4372b5-e485-4bf5-8b80-8b8cfaa1a52d",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"console.log(\"username1.firstMessageId:\" + jsonData[0][1].messageIds[0])",
													"pm.collectionVariables.set(\"username1.firstMessageId\", jsonData[0][1].messageIds[0]);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[[\"getMessageList\",{\"filter\":{\"inMailboxes\":[\"{{username1.mailboxId}}\"]}},\"#0\"]]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Message API",
							"item": [
								{
									"name": "Request username1 first message from inbox",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{username1.accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[[\"getMessages\",{\"ids\":[\"{{username1.firstMessageId}}\"]},\"#0\"]]"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "jmap-rfc-8621",
					"item": [
						{
							"name": "Start session using JWT token",
							"item": [
								{
									"name": "Load capabilities and get account id (using JWT token)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b5f2a6ca-26a4-4613-8415-d18a632953a6",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"console.log(\"accountId:\" + jsonData[\"primaryAccounts\"][\"urn:ietf:params:jmap:mail\"])",
													"",
													"pm.collectionVariables.set(\"accountId\", jsonData[\"primaryAccounts\"][\"urn:ietf:params:jmap:mail\"]);",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "9e468e07-b2f8-484a-9cbe-7d0c5dfb6186",
												"exec": [
													"// copy jwtBearerToken into accessToken variable",
													"pm.collectionVariables.set(\"accessToken\", pm.environment.get(\"jwtBearerToken\"));",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json; jmapVersion=rfc-8621"
											},
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{jmapApiHost}}/.well-known/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												".well-known",
												"jmap"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Mailbox API",
							"item": [
								{
									"name": "Get mailboxes of an account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7b6ae6b9-a17c-418c-a8c6-14995de774e3",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var inboxId = jsonData[\"methodResponses\"][0][1][\"list\"][0][\"id\"];",
													"",
													"console.log(\"inbox id:\" + inboxId)",
													"",
													"pm.collectionVariables.set(\"inboxId\", inboxId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json; jmapVersion=rfc-8621"
											},
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"using\": [ \"urn:ietf:params:jmap:core\", \"urn:ietf:params:jmap:mail\" ],\n\"methodCalls\": [\n[ \"Mailbox/get\", {\"accountId\":\"{{accountId}}\", \"ids\": null}, \"0\"]\n]\n}"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get inbox mailbox of an account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "45724415-f683-41b1-a56d-db18867c32ad",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var secondMessageId = jsonData[\"methodResponses\"][0][1][\"ids\"][1]",
													"",
													"console.log(\"messageId:\" + secondMessageId)",
													"",
													"pm.collectionVariables.set(\"messageId\", secondMessageId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json; jmapVersion=rfc-8621"
											},
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"using\": [ \"urn:ietf:params:jmap:core\", \"urn:ietf:params:jmap:mail\" ],\n\"methodCalls\": [\n[ \"Email/query\", {\"accountId\":\"{{accountId}}\",  \"filter\": { \"inMailbox\": \"79de51f0-1fef-11eb-ba78-a300e6439e54\" }}, \"0\"]\n]\n}"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get email message by id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbfbd403-3e06-44b9-b15b-5dcea2fe72c8",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"var attachmentId = jsonData[\"methodResponses\"][0][1][\"list\"][0][\"attachments\"][0][\"blobId\"];",
													"",
													"console.log(\"attachmentId:\" + attachmentId)",
													"",
													"pm.collectionVariables.set(\"attachmentId\", attachmentId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json; jmapVersion=rfc-8621"
											},
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"using\": [ \"urn:ietf:params:jmap:core\", \"urn:ietf:params:jmap:mail\" ],\n\"methodCalls\": [\n[ \"Email/get\", {\"accountId\":\"{{accountId}}\",  \"ids\": [\"{{messageId}}\"]}, \"0\"]\n]\n}"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get email attachment by id - returns unknownMethod",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ab75e62-795c-4c24-ade6-ec3b921d4cbd",
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"accept": true
										}
									},
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json; charset=UTF-8"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json; jmapVersion=rfc-8621"
											},
											{
												"key": "Authorization",
												"value": "{{accessToken}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\"using\": [ \"urn:ietf:params:jmap:core\", \"urn:ietf:params:jmap:mail\" ],\n\"methodCalls\": [\n[ \"Email/get\", {\"accountId\":\"{{accountId}}\",  \"ids\": [\"{{attachmentId}}\"]}, \"0\"]\n]\n}"
										},
										"url": {
											"raw": "{{jmapApiHost}}/jmap",
											"host": [
												"{{jmapApiHost}}"
											],
											"path": [
												"jmap"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "3d1f0e2c-8cd7-4625-84f5-f05af0be9c20",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "47f6fc14-a4f1-4ece-a3e1-233979e9be6f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
